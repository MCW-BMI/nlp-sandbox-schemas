openapi: 3.0.2
info:
  version: 0.1.4
  title: NLP Sandbox Data Node API
  contact:
    name: The NLP Sandbox Team
    email: thomas.schaffter@sagebionetworks.org
    url: 'https://Sage-Bionetworks.github.io/nlp-sandbox-schemas'
  license:
    name: Apache 2.0
    url: 'https://github.com/Sage-Bionetworks/nlp-sandbox/blob/main/LICENSE'
  x-logo:
    url: 'https://Sage-Bionetworks.github.io/nlp-sandbox-schemas/logo.png'
  description: >
    The OpenAPI specification implemented by NLP Sandbox Data Nodes.

    # Overview

    A NLP Sandbox Data Node is a repository of clinical notes that implements
    this OpenAPI specification so that other services in the NLP Sandbox
    ecosystem can access them. For example, a client requests data from a Data
    Node before passing them as input to an NLP Tool like a Date Annotator,
    Person Name Annotator, etc.

    For the sake of benchmarking NLP Tool, a Data Node can also give access to
    the gold standard that the NLP Tool is expected to infer (e.g. annotations).
tags:
  - name: Note
    description: Operations about clinical notes
servers:
  - url: 'http://example.com/api/v1'
  - url: 'https://example.com/api/v1'
paths:
  /annotations/dates:
    get:
      tags:
        - Date
      summary: Get all date annotations
      description: Returns the date annotations
      operationId: dates.read_all
      parameters:
        - in: query
          name: limit
          description: Maximum number of results returned
          required: false
          schema:
            type: integer
            default: 10
            minimum: 10
        - in: query
          name: offset
          description: Index of the first result that must be returned
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DateAnnotation'
                allOf:
                  - $ref: '#/components/schemas/PageResponse'
          description: Success
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /health:
    get:
      tags:
        - Health
      summary: Get Health
      description: Get the health of the API
      operationId: health
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /notes:
    get:
      tags:
        - Note
      summary: Get all clinical notes
      description: Returns the clinical notes
      operationId: notes.read_all
      parameters:
        - in: query
          name: limit
          description: Maximum number of results returned
          required: false
          schema:
            type: integer
            default: 10
            minimum: 10
        - in: query
          name: offset
          description: Index of the first result that must be returned
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Note'
                allOf:
                  - $ref: '#/components/schemas/PageResponse'
          description: Success
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  '/notes/{id}':
    get:
      tags:
        - Note
      summary: Get a clinical note by ID
      description: Returns the clinical note for a given ID
      operationId: notes.read
      parameters:
        - name: id
          in: path
          description: The ID of the clinical note to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    PageResponse:
      type: object
      description: A page of results
      properties:
        links:
          description: Links to navigate to different pages of results
          type: object
          properties:
            next:
              description: Link to the enxt page of results
              type: string
              format: uri
    Email:
      description: User email address
      type: string
      format: test
      example: john.smith@example.com
    User:
      type: object
      properties:
        username:
          type: string
          minLength: 4
          example: John78
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Smith
        email:
          $ref: '#/components/schemas/Email'
      required:
        - username
        - firstName
        - lastName
        - email
    Entity:
      type: object
      properties:
        id:
          description: ID
          type: integer
        createdBy:
          description: The User who created this entity
          $ref: '#/components/schemas/User'
        createdAt:
          description: When the entity has been created
          type: string
          format: date-time
        updatedBy:
          description: The User who update this entity
          $ref: '#/components/schemas/User'
        updatedAt:
          description: When the entity has been updated
          type: string
          format: date-time
      required:
        - id
    Annotation:
      type: object
      description: An annotation in a text
      properties:
        noteId:
          description: The note ID
          type: integer
        start:
          description: The position of the first character
          type: integer
        length:
          description: The length of the annotation
          type: integer
        text:
          description: The string annotated
          type: string
      required:
        - noteId
        - start
        - length
      allOf:
        - $ref: '#/components/schemas/Entity'
    DateAnnotation:
      type: object
      description: A date annotation in a text
      properties:
        format:
          description: Date format (ISO 8601)
          type: string
      allOf:
        - $ref: '#/components/schemas/Annotation'
    Error:
      type: object
      properties:
        title:
          type: string
          description: A human readable documentation for the problem type
        status:
          type: integer
          description: The HTTP status code
        detail:
          type: string
          description: >-
            A human readable explanation specific to this occurrence of the
            problem
        type:
          type: string
          description: An absolute URI that identifies the problem type
      required:
        - title
        - status
    Health:
      type: object
      properties:
        status:
          description: Health status
          type: string
          enum:
            - pass
            - warn
    PatientPublicId:
      type: string
      description: The patient public ID
      maxLength: 50
      example: 4f6cf35x-2c4y-483z-a0a9-158621f77a21
    Note:
      type: object
      description: A clinical note
      properties:
        text:
          description: The content of the note
          type: string
          example: 'On March 11, Ms Chloe Price met with her family.'
        patientPublicId:
          allOf:
            - $ref: '#/components/schemas/PatientPublicId'
        type:
          description: The note type
          type: string
          enum:
            - pathology
            - phone_call
      allOf:
        - $ref: '#/components/schemas/Entity'
      required:
        - text
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

openapi: 3.0.2
info:
  version: 0.1.4
  title: NLP Sandbox Physical Address Annotator API
  contact:
    name: The NLP Sandbox Team
    email: thomas.schaffter@sagebionetworks.org
    url: 'https://Sage-Bionetworks.github.io/nlp-sandbox-schemas'
  license:
    name: Apache 2.0
    url: 'https://github.com/Sage-Bionetworks/nlp-sandbox/blob/main/LICENSE'
  x-logo:
    url: 'https://Sage-Bionetworks.github.io/nlp-sandbox-schemas/logo.png'
  description: >
    The OpenAPI specification implemented by NLP Sandbox Physical Address
    Annotators.

    # Overview

    This NLP tool detects references of physical addresses in the clinical notes
    given as input and returns a list of physical address annotations.
tags:
  - name: Physical Address
    description: Operations about physical addresses
  - name: Health
    description: Operations about API health
servers:
  - url: 'http://example.com/api/v1'
  - url: 'https://example.com/api/v1'
paths:
  /physical-addresses:
    get:
      tags:
        - Physical Address
      summary: Get all physical address annotations
      description: Returns the physical address annotations
      operationId: physical_addresses.read_all
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhysicalAddressAnnotation'
        '403':
          description: Forbidden
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Note'
  /health:
    get:
      tags:
        - Health
      summary: Get Health
      description: Get the health of the API
      operationId: health
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    Email:
      description: User email address
      type: string
      format: test
      example: john.smith@example.com
    User:
      type: object
      properties:
        username:
          type: string
          minLength: 4
          example: John78
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Smith
        email:
          $ref: '#/components/schemas/Email'
      required:
        - username
        - firstName
        - lastName
        - email
    Entity:
      type: object
      properties:
        id:
          description: ID
          type: integer
        createdBy:
          description: The User who created this entity
          $ref: '#/components/schemas/User'
        createdAt:
          description: When the entity has been created
          type: string
          format: date-time
        updatedBy:
          description: The User who update this entity
          $ref: '#/components/schemas/User'
        updatedAt:
          description: When the entity has been updated
          type: string
          format: date-time
      required:
        - id
    PatientPublicId:
      type: string
      description: The patient public ID
      maxLength: 50
      example: 4f6cf35x-2c4y-483z-a0a9-158621f77a21
    Note:
      type: object
      description: A clinical note
      properties:
        text:
          description: The content of the note
          type: string
          example: 'On March 11, Ms Chloe Price met with her family.'
        patientPublicId:
          allOf:
            - $ref: '#/components/schemas/PatientPublicId'
        type:
          description: The note type
          type: string
          enum:
            - pathology
            - phone_call
      allOf:
        - $ref: '#/components/schemas/Entity'
      required:
        - text
    Annotation:
      type: object
      description: An annotation in a text
      properties:
        noteId:
          description: The note ID
          type: integer
        start:
          description: The position of the first character
          type: integer
        length:
          description: The length of the annotation
          type: integer
        text:
          description: The string annotated
          type: string
      required:
        - noteId
        - start
        - length
      allOf:
        - $ref: '#/components/schemas/Entity'
    PhysicalAddressAnnotation:
      type: object
      description: A physical address annotation in a text
      allOf:
        - $ref: '#/components/schemas/Annotation'
    Health:
      type: object
      properties:
        status:
          description: Health status
          type: string
          enum:
            - pass
            - warn
    Error:
      type: object
      properties:
        type:
          type: string
          description: An absolute URI that identifies the problem type
        title:
          type: string
          description: A human readable documentation for the problem type
        status:
          type: integer
          description: The HTTP status code
        detail:
          type: string
          description: >-
            A human readable explanation specific to this occurrence of the
            problem
      required:
        - code
        - message
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
